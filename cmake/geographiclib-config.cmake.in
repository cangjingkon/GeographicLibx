# $Id$
#
# Configure GeographicLib
#
# Set
#  GEOGRAPHICLIB_FOUND = TRUE
#  GeographicLib_INCLUDE_DIRS = /usr/local/include
#  GeographicLib_LIBRARIES = Geographic
#  GeographicLib_LIBRARY_DIRS = /usr/local/lib
#  GeographicLib_VERSION = 1.13 (for example)

message (STATUS "Reading ${CMAKE_CURRENT_LIST_FILE}")
set (GeographicLib_VERSION "@GeographicLib_VERSION@")
message (STATUS "GeographicLib configuration, version "
  ${GeographicLib_VERSION})

# Tell the user project where to find our headers and libraries
get_filename_component (_DIR ${CMAKE_CURRENT_LIST_FILE} PATH)
get_filename_component (GEOGRAPHICLIB_ROOT_DIR
  "${_DIR}/@GEOGRAPHICLIB_ROOT_DIR@" ABSOLUTE)
set (GeographicLib_INCLUDE_DIRS "${GEOGRAPHICLIB_ROOT_DIR}/include")
set (GeographicLib_LIBRARY_DIRS "${GEOGRAPHICLIB_ROOT_DIR}/lib")

# Do a sanity check by looking for include/GeographicLib/Config.h
foreach (p ${GeographicLib_INCLUDE_DIRS})
  # Only check first include dir
  if (NOT EXISTS "${p}/GeographicLib/Config.h")
    unset (GeographicLib_INCLUDE_DIRS)
    unset (GeographicLib_LIBRARY_DIRS)
    unset (GeographicLib_VERSION)
  endif (NOT EXISTS "${p}/GeographicLib/Config.h")
  break (p ${GeographicLib_INCLUDE_DIRS})
endforeach (p ${GeographicLib_INCLUDE_DIRS})

# Verify that the compiler versions match on Windows
if (DEFINED GeographicLib_INCLUDE_DIRS AND
  NOT "${CMAKE_GENERATOR}" STREQUAL "@CMAKE_GENERATOR@")
    unset (GeographicLib_INCLUDE_DIRS)
    unset (GeographicLib_LIBRARY_DIRS)
    unset (GeographicLib_VERSION)
endif (DEFINED GeographicLib_INCLUDE_DIRS AND
  NOT "${CMAKE_GENERATOR}" STREQUAL "@CMAKE_GENERATOR@")

# Read in the exported definition of the library
if (DEFINED GeographicLib_INCLUDE_DIRS)
  include ("${_DIR}/GeographicLibDepends.cmake")
  set (GeographicLib_LIBRARIES Geographic)
endif (DEFINED GeographicLib_INCLUDE_DIRS)

# Boiler plate check
include (FindPackageHandleStandardArgs)
find_package_handle_standard_args (GeographicLib DEFAULT_MSG
  GeographicLib_LIBRARY_DIRS GeographicLib_LIBRARIES GeographicLib_INCLUDE_DIRS)
mark_as_advanced (GeographicLib_LIBRARY_DIRS GeographicLib_LIBRARIES
  GeographicLib_INCLUDE_DIRS)
