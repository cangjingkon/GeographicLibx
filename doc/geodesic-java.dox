// -*- text -*-
/**
 * \file geodesic-java.dox
 * \brief Documentation for geodesic routines implemented in Java
 *
 * Written by Charles Karney <charles@karney.com> and licensed under the
 * MIT/X11 License.  For more information, see
 * http://geographiclib.sourceforge.net/
 **********************************************************************/

/**
\mainpage Geodesic routines implemented in Java
\author Charles F. F. Karney (charles@karney.com)
\version 1.31

\section abstract Abstract

This is a Java implementation of the geodesic algorithms from <a
href="http://geographiclib.sf.net">GeographicLib</a>.  This is a
self-contained library which makes it easy to do geodesic computations
for an ellipsoid of revolution in a Java program.  It requires Java
version 1.1 or later.  I am open to suggestions for how best to package
this as a stand-alone library.

\section download Downloading the source

The Java library is part of %GeographicLib which available for download at
- <a href="http://sf.net/projects/geographiclib/files/distrib/GeographicLib-1.31.tar.gz">
  GeographicLib-1.31.tar.gz</a>
- <a href="http://sf.net/projects/geographiclib/files/distrib/GeographicLib-1.31.zip">
  GeographicLib-1.31.zip</a>
.
as either a compressed tar file (tar.gz) or a zip file.  After unpacking
the source, the Java library can be found in GeographicLib-1.31/java.
The library consists of the files in the net/sf/geographiclib subdirectory.

\section samples Sample programs

Also included are 3 small test programs:
 - Direct.java is a simple command line utility for solving the
   direct geodesic problem;
 - Inverse.java is a simple command line utility for solving the
   inverse geodesic problem;
 - Planimeter.java is a simple command line utility for computing the
   area of a geodesic polygon given its vertices.
 .
Here, for example, is Inverse.java
\include Inverse.java
To compile and run this, you would typically run \verbatim
javac Inverse.java
echo -30 0 29.5 179.5 | java Inverse \endverbatim

\section library Using the library

- Put @verbatim
  import net.sf.geographiclib.* @endverbatim
  in your source code.
- Include calls to the geodesic routines in your code.
- Compile and run as described above.

The important classes are
- net.sf.geographiclib.Geodesic, for direct and inverse geodesic calculations
- net.sf.geographiclib.GeodesicLine, an efficient way of calculating multiple
  points on a single geodesic.
- net.sf.geographiclib.GeodesicData, the object containing the results of the
  geodesic calculations.
- net.sf.geographiclib.GeodesicMask, the constants that let you specify the
  variables to return in GeodesicData and the capabilities of a
  GeodesicLine.
- net.sf.geographiclib.Constant, the parameters for the WGS84 ellipsoid.
- net.sf.geographiclib.PolygonArea, a class to compute the perimeter and area
  of a geodesic polygon (returned as a net.sf.geographiclib.PolygonResult).

\section external External links

- These algorithms are derived in C. F. F. Karney,
  <a href="http://dx.doi.org/10.1007/s00190-012-0578-z">
  Algorithms for geodesics</a>,
  J. Geodesy <b>87</b>, 43--55 (2013)
  (<a href="http://geographiclib.sf.net/geod-addenda.html"> addenda</a>).
- A longer paper on geodesics: C. F. F. Karney,
   <a href="http://arxiv.org/abs/1102.1215v1">Geodesics
   on an ellipsoid of revolution</a>,
   Feb. 2011
   (<a href="http://geographiclib.sf.net/geod-addenda.html#geod-errata">
   errata</a>).
- <a href="http://geographiclib.sf.net">The GeographicLib web site</a>.
- <a href="../index.html">The C++ library</a>.
- The section in the %GeographicLib documentation on geodesics:
  <a href="../geodesic.html">Geodesics on an ellipsoid of revolution</a>.
- <a href="http://geographiclib.sf.net/geodesic-papers/biblio.html">
  An online geodesic bibliography</a>.
**********************************************************************/
